version: "3.8"

services:

  # PHP-FPM Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php-fpm
    restart: always
    tty: true
    environment:
      REDIS_HOST: redis
      REDIS_PORT: &redis-port 6379
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_started
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php-fpm/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - backend

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    tty: true
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      app:
        condition: service_started
    networks:
      - frontend
      - backend

  # PostgreSQL Service
  db:
    image: postgres:alpine
    container_name: db
    restart: always
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      SERVICE_TAGS: production
      SERVICE_NAME: postgres
    cap_add:
      - SYS_NICE
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

  # Redis Service
  redis:
    image: redis:6.0.8-alpine
    container_name: redis
    tty: true
    restart: always
    volumes:
      - redis-data:/data:rw
    ports: [ *redis-port, "16379:6379" ]
    networks:
      - backend

# Docker Networks
networks:
  frontend:
  backend:

# Volumes
volumes:
  db-data:
  redis-data: